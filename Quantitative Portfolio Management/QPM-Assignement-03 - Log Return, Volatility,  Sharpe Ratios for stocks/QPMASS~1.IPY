{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c301e5a7",
   "metadata": {},
   "source": [
    "# QPM Assignement 3 - Log return, Volatility, Sharpe Ratios"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2584d14c",
   "metadata": {},
   "source": [
    "by Guillaume IDAME KORALAGE"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8753b659",
   "metadata": {},
   "source": [
    "## Librairies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ccfe24fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import yfinance as yf"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1669742e",
   "metadata": {},
   "source": [
    "## Functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "599304bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_market_data(list_yahoo_codes, start_date, end_date) : \n",
    "    market_data = yf.download(list_yahoo_codes, start = start_date, end = end_date)\n",
    "    return market_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9b72a8e",
   "metadata": {},
   "source": [
    "## Assignement"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73fbd4e4",
   "metadata": {},
   "source": [
    "#### Q3.1 Prepare the data for this assignment.\n",
    "- Make sure you have already imported \"pandas\" and \"yfinance\" into\n",
    "Python.\n",
    "- Download from Wikipedia (or any other source) a table that lists the\n",
    "companies that comprise the S&P 500. (See \\Helpful links\" provided\n",
    "at the end of the assignment.)\n",
    "- From this table, extract the list of ticker symbols (short names for all\n",
    "the companies).\n",
    "- Set the start date and end date to be start date = \"2000-01-01\" and end date = \"2022-12-31\"\n",
    "- Build a dataframe that contains the stock prices for the S&P 500\n",
    "companies. (If there are errors for some company names, it is fine to\n",
    "ignore the company names with errors.)\n",
    "- Drop the columns that have only \\NaN\" entries.\n",
    "- Drop also the company names that have more than 100 missing\n",
    "observations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "15d8dcfc",
   "metadata": {},
   "outputs": [],
   "source": [
    "URL = \"https://en.wikipedia.org/wiki/List_of_S%26P_500_companies\"\n",
    "list_yahoo_codes = pd.read_html(URL)[0][\"Symbol\"].to_list()\n",
    "start_date = \"2000-01-01\"\n",
    "end_date = \"2022-12-31\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c66dd1b9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[*********************100%%**********************]  503 of 503 completed"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "4 Failed downloads:\n",
      "['BRK.B']: Exception('%ticker%: No timezone found, symbol may be delisted')\n",
      "['VLTO', 'KVUE']: Exception(\"%ticker%: Data doesn't exist for startDate = 946702800, endDate = 1672462800\")\n",
      "['BF.B']: Exception('%ticker%: No price data found, symbol may be delisted (1d 2000-01-01 -> 2022-12-31)')\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>AAL</th>\n",
       "      <th>AAPL</th>\n",
       "      <th>ABBV</th>\n",
       "      <th>ABNB</th>\n",
       "      <th>ABT</th>\n",
       "      <th>ACGL</th>\n",
       "      <th>ACN</th>\n",
       "      <th>ADBE</th>\n",
       "      <th>ADI</th>\n",
       "      <th>...</th>\n",
       "      <th>WYNN</th>\n",
       "      <th>XEL</th>\n",
       "      <th>XOM</th>\n",
       "      <th>XRAY</th>\n",
       "      <th>XYL</th>\n",
       "      <th>YUM</th>\n",
       "      <th>ZBH</th>\n",
       "      <th>ZBRA</th>\n",
       "      <th>ZION</th>\n",
       "      <th>ZTS</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-12-23 00:00:00</th>\n",
       "      <td>148.183105</td>\n",
       "      <td>12.71</td>\n",
       "      <td>131.127075</td>\n",
       "      <td>156.766937</td>\n",
       "      <td>85.250000</td>\n",
       "      <td>106.058311</td>\n",
       "      <td>63.380001</td>\n",
       "      <td>261.928528</td>\n",
       "      <td>338.450012</td>\n",
       "      <td>160.778229</td>\n",
       "      <td>...</td>\n",
       "      <td>80.091263</td>\n",
       "      <td>68.689743</td>\n",
       "      <td>105.091949</td>\n",
       "      <td>31.343018</td>\n",
       "      <td>108.321205</td>\n",
       "      <td>126.519447</td>\n",
       "      <td>125.965240</td>\n",
       "      <td>248.220001</td>\n",
       "      <td>46.140099</td>\n",
       "      <td>144.442398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-27 00:00:00</th>\n",
       "      <td>148.500870</td>\n",
       "      <td>12.53</td>\n",
       "      <td>129.307220</td>\n",
       "      <td>156.661194</td>\n",
       "      <td>83.489998</td>\n",
       "      <td>106.440666</td>\n",
       "      <td>63.619999</td>\n",
       "      <td>261.160736</td>\n",
       "      <td>335.089996</td>\n",
       "      <td>159.168869</td>\n",
       "      <td>...</td>\n",
       "      <td>83.673141</td>\n",
       "      <td>69.309517</td>\n",
       "      <td>106.552094</td>\n",
       "      <td>31.579344</td>\n",
       "      <td>109.298485</td>\n",
       "      <td>127.500969</td>\n",
       "      <td>126.551857</td>\n",
       "      <td>251.000000</td>\n",
       "      <td>46.511501</td>\n",
       "      <td>143.986572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-28 00:00:00</th>\n",
       "      <td>147.051102</td>\n",
       "      <td>12.32</td>\n",
       "      <td>125.339409</td>\n",
       "      <td>155.930710</td>\n",
       "      <td>82.489998</td>\n",
       "      <td>105.715179</td>\n",
       "      <td>62.599998</td>\n",
       "      <td>259.004974</td>\n",
       "      <td>328.329987</td>\n",
       "      <td>157.284744</td>\n",
       "      <td>...</td>\n",
       "      <td>79.466171</td>\n",
       "      <td>68.810280</td>\n",
       "      <td>104.801842</td>\n",
       "      <td>30.506021</td>\n",
       "      <td>107.541344</td>\n",
       "      <td>126.921890</td>\n",
       "      <td>125.269241</td>\n",
       "      <td>246.839996</td>\n",
       "      <td>45.682983</td>\n",
       "      <td>142.529861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-29 00:00:00</th>\n",
       "      <td>150.030060</td>\n",
       "      <td>12.70</td>\n",
       "      <td>128.889557</td>\n",
       "      <td>156.247894</td>\n",
       "      <td>85.230003</td>\n",
       "      <td>108.146538</td>\n",
       "      <td>63.110001</td>\n",
       "      <td>264.182709</td>\n",
       "      <td>337.579987</td>\n",
       "      <td>160.915604</td>\n",
       "      <td>...</td>\n",
       "      <td>80.627060</td>\n",
       "      <td>69.297813</td>\n",
       "      <td>105.594780</td>\n",
       "      <td>31.914906</td>\n",
       "      <td>110.206680</td>\n",
       "      <td>127.589325</td>\n",
       "      <td>127.098709</td>\n",
       "      <td>257.529999</td>\n",
       "      <td>46.740059</td>\n",
       "      <td>146.810806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-30 00:00:00</th>\n",
       "      <td>148.821777</td>\n",
       "      <td>12.72</td>\n",
       "      <td>129.207779</td>\n",
       "      <td>155.334778</td>\n",
       "      <td>85.500000</td>\n",
       "      <td>107.636734</td>\n",
       "      <td>62.779999</td>\n",
       "      <td>262.666809</td>\n",
       "      <td>336.529999</td>\n",
       "      <td>160.964661</td>\n",
       "      <td>...</td>\n",
       "      <td>81.827637</td>\n",
       "      <td>68.361755</td>\n",
       "      <td>106.658455</td>\n",
       "      <td>31.479881</td>\n",
       "      <td>109.150414</td>\n",
       "      <td>125.714600</td>\n",
       "      <td>126.770607</td>\n",
       "      <td>256.410004</td>\n",
       "      <td>46.816246</td>\n",
       "      <td>145.225281</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 498 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                              A    AAL        AAPL        ABBV       ABNB  \\\n",
       "Date                                                                        \n",
       "2022-12-23 00:00:00  148.183105  12.71  131.127075  156.766937  85.250000   \n",
       "2022-12-27 00:00:00  148.500870  12.53  129.307220  156.661194  83.489998   \n",
       "2022-12-28 00:00:00  147.051102  12.32  125.339409  155.930710  82.489998   \n",
       "2022-12-29 00:00:00  150.030060  12.70  128.889557  156.247894  85.230003   \n",
       "2022-12-30 00:00:00  148.821777  12.72  129.207779  155.334778  85.500000   \n",
       "\n",
       "                            ABT       ACGL         ACN        ADBE  \\\n",
       "Date                                                                 \n",
       "2022-12-23 00:00:00  106.058311  63.380001  261.928528  338.450012   \n",
       "2022-12-27 00:00:00  106.440666  63.619999  261.160736  335.089996   \n",
       "2022-12-28 00:00:00  105.715179  62.599998  259.004974  328.329987   \n",
       "2022-12-29 00:00:00  108.146538  63.110001  264.182709  337.579987   \n",
       "2022-12-30 00:00:00  107.636734  62.779999  262.666809  336.529999   \n",
       "\n",
       "                            ADI  ...       WYNN        XEL         XOM  \\\n",
       "Date                             ...                                     \n",
       "2022-12-23 00:00:00  160.778229  ...  80.091263  68.689743  105.091949   \n",
       "2022-12-27 00:00:00  159.168869  ...  83.673141  69.309517  106.552094   \n",
       "2022-12-28 00:00:00  157.284744  ...  79.466171  68.810280  104.801842   \n",
       "2022-12-29 00:00:00  160.915604  ...  80.627060  69.297813  105.594780   \n",
       "2022-12-30 00:00:00  160.964661  ...  81.827637  68.361755  106.658455   \n",
       "\n",
       "                          XRAY         XYL         YUM         ZBH  \\\n",
       "Date                                                                 \n",
       "2022-12-23 00:00:00  31.343018  108.321205  126.519447  125.965240   \n",
       "2022-12-27 00:00:00  31.579344  109.298485  127.500969  126.551857   \n",
       "2022-12-28 00:00:00  30.506021  107.541344  126.921890  125.269241   \n",
       "2022-12-29 00:00:00  31.914906  110.206680  127.589325  127.098709   \n",
       "2022-12-30 00:00:00  31.479881  109.150414  125.714600  126.770607   \n",
       "\n",
       "                           ZBRA       ZION         ZTS  \n",
       "Date                                                    \n",
       "2022-12-23 00:00:00  248.220001  46.140099  144.442398  \n",
       "2022-12-27 00:00:00  251.000000  46.511501  143.986572  \n",
       "2022-12-28 00:00:00  246.839996  45.682983  142.529861  \n",
       "2022-12-29 00:00:00  257.529999  46.740059  146.810806  \n",
       "2022-12-30 00:00:00  256.410004  46.816246  145.225281  \n",
       "\n",
       "[5 rows x 498 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "market_data = get_market_data(list_yahoo_codes, start_date, end_date) \n",
    "close_price_data = market_data.xs(\"Adj Close\", level = 0, axis = 1)\n",
    "clean_close_price_data = close_price_data.dropna(how = \"all\", axis = 1).dropna(thresh=100, axis = 1)\n",
    "clean_close_price_data.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8177e4d0",
   "metadata": {},
   "source": [
    "#### Q3.2 Compute the log returns for the companies in your dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "959217e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>A</th>\n",
       "      <th>AAL</th>\n",
       "      <th>AAPL</th>\n",
       "      <th>ABBV</th>\n",
       "      <th>ABNB</th>\n",
       "      <th>ABT</th>\n",
       "      <th>ACGL</th>\n",
       "      <th>ACN</th>\n",
       "      <th>ADBE</th>\n",
       "      <th>ADI</th>\n",
       "      <th>...</th>\n",
       "      <th>WYNN</th>\n",
       "      <th>XEL</th>\n",
       "      <th>XOM</th>\n",
       "      <th>XRAY</th>\n",
       "      <th>XYL</th>\n",
       "      <th>YUM</th>\n",
       "      <th>ZBH</th>\n",
       "      <th>ZBRA</th>\n",
       "      <th>ZION</th>\n",
       "      <th>ZTS</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2022-12-23 00:00:00</th>\n",
       "      <td>0.001475</td>\n",
       "      <td>0.011872</td>\n",
       "      <td>-0.002802</td>\n",
       "      <td>-0.001042</td>\n",
       "      <td>0.004467</td>\n",
       "      <td>0.001388</td>\n",
       "      <td>0.008397</td>\n",
       "      <td>0.005011</td>\n",
       "      <td>0.005719</td>\n",
       "      <td>0.000550</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.006421</td>\n",
       "      <td>0.012770</td>\n",
       "      <td>0.026101</td>\n",
       "      <td>0.011057</td>\n",
       "      <td>-0.000729</td>\n",
       "      <td>0.000621</td>\n",
       "      <td>0.001106</td>\n",
       "      <td>0.002864</td>\n",
       "      <td>0.003515</td>\n",
       "      <td>0.005021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-27 00:00:00</th>\n",
       "      <td>0.002142</td>\n",
       "      <td>-0.014263</td>\n",
       "      <td>-0.013976</td>\n",
       "      <td>-0.000675</td>\n",
       "      <td>-0.020861</td>\n",
       "      <td>0.003599</td>\n",
       "      <td>0.003779</td>\n",
       "      <td>-0.002936</td>\n",
       "      <td>-0.009977</td>\n",
       "      <td>-0.010060</td>\n",
       "      <td>...</td>\n",
       "      <td>0.043751</td>\n",
       "      <td>0.008982</td>\n",
       "      <td>0.013798</td>\n",
       "      <td>0.007512</td>\n",
       "      <td>0.008982</td>\n",
       "      <td>0.007728</td>\n",
       "      <td>0.004646</td>\n",
       "      <td>0.011137</td>\n",
       "      <td>0.008017</td>\n",
       "      <td>-0.003161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-28 00:00:00</th>\n",
       "      <td>-0.009811</td>\n",
       "      <td>-0.016902</td>\n",
       "      <td>-0.031166</td>\n",
       "      <td>-0.004674</td>\n",
       "      <td>-0.012050</td>\n",
       "      <td>-0.006839</td>\n",
       "      <td>-0.016163</td>\n",
       "      <td>-0.008289</td>\n",
       "      <td>-0.020380</td>\n",
       "      <td>-0.011908</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.051587</td>\n",
       "      <td>-0.007229</td>\n",
       "      <td>-0.016563</td>\n",
       "      <td>-0.034579</td>\n",
       "      <td>-0.016207</td>\n",
       "      <td>-0.004552</td>\n",
       "      <td>-0.010187</td>\n",
       "      <td>-0.016713</td>\n",
       "      <td>-0.017974</td>\n",
       "      <td>-0.010169</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-29 00:00:00</th>\n",
       "      <td>0.020056</td>\n",
       "      <td>0.030378</td>\n",
       "      <td>0.027931</td>\n",
       "      <td>0.002032</td>\n",
       "      <td>0.032676</td>\n",
       "      <td>0.022739</td>\n",
       "      <td>0.008114</td>\n",
       "      <td>0.019794</td>\n",
       "      <td>0.027783</td>\n",
       "      <td>0.022822</td>\n",
       "      <td>...</td>\n",
       "      <td>0.014503</td>\n",
       "      <td>0.007060</td>\n",
       "      <td>0.007538</td>\n",
       "      <td>0.045149</td>\n",
       "      <td>0.024482</td>\n",
       "      <td>0.005245</td>\n",
       "      <td>0.014499</td>\n",
       "      <td>0.042396</td>\n",
       "      <td>0.022876</td>\n",
       "      <td>0.029593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-30 00:00:00</th>\n",
       "      <td>-0.008086</td>\n",
       "      <td>0.001574</td>\n",
       "      <td>0.002466</td>\n",
       "      <td>-0.005861</td>\n",
       "      <td>0.003163</td>\n",
       "      <td>-0.004725</td>\n",
       "      <td>-0.005243</td>\n",
       "      <td>-0.005755</td>\n",
       "      <td>-0.003115</td>\n",
       "      <td>0.000305</td>\n",
       "      <td>...</td>\n",
       "      <td>0.014781</td>\n",
       "      <td>-0.013600</td>\n",
       "      <td>0.010023</td>\n",
       "      <td>-0.013725</td>\n",
       "      <td>-0.009631</td>\n",
       "      <td>-0.014802</td>\n",
       "      <td>-0.002585</td>\n",
       "      <td>-0.004358</td>\n",
       "      <td>0.001629</td>\n",
       "      <td>-0.010859</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 503 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            A       AAL      AAPL      ABBV      ABNB  \\\n",
       "Date                                                                    \n",
       "2022-12-23 00:00:00  0.001475  0.011872 -0.002802 -0.001042  0.004467   \n",
       "2022-12-27 00:00:00  0.002142 -0.014263 -0.013976 -0.000675 -0.020861   \n",
       "2022-12-28 00:00:00 -0.009811 -0.016902 -0.031166 -0.004674 -0.012050   \n",
       "2022-12-29 00:00:00  0.020056  0.030378  0.027931  0.002032  0.032676   \n",
       "2022-12-30 00:00:00 -0.008086  0.001574  0.002466 -0.005861  0.003163   \n",
       "\n",
       "                          ABT      ACGL       ACN      ADBE       ADI  ...  \\\n",
       "Date                                                                   ...   \n",
       "2022-12-23 00:00:00  0.001388  0.008397  0.005011  0.005719  0.000550  ...   \n",
       "2022-12-27 00:00:00  0.003599  0.003779 -0.002936 -0.009977 -0.010060  ...   \n",
       "2022-12-28 00:00:00 -0.006839 -0.016163 -0.008289 -0.020380 -0.011908  ...   \n",
       "2022-12-29 00:00:00  0.022739  0.008114  0.019794  0.027783  0.022822  ...   \n",
       "2022-12-30 00:00:00 -0.004725 -0.005243 -0.005755 -0.003115  0.000305  ...   \n",
       "\n",
       "                         WYNN       XEL       XOM      XRAY       XYL  \\\n",
       "Date                                                                    \n",
       "2022-12-23 00:00:00 -0.006421  0.012770  0.026101  0.011057 -0.000729   \n",
       "2022-12-27 00:00:00  0.043751  0.008982  0.013798  0.007512  0.008982   \n",
       "2022-12-28 00:00:00 -0.051587 -0.007229 -0.016563 -0.034579 -0.016207   \n",
       "2022-12-29 00:00:00  0.014503  0.007060  0.007538  0.045149  0.024482   \n",
       "2022-12-30 00:00:00  0.014781 -0.013600  0.010023 -0.013725 -0.009631   \n",
       "\n",
       "                          YUM       ZBH      ZBRA      ZION       ZTS  \n",
       "Date                                                                   \n",
       "2022-12-23 00:00:00  0.000621  0.001106  0.002864  0.003515  0.005021  \n",
       "2022-12-27 00:00:00  0.007728  0.004646  0.011137  0.008017 -0.003161  \n",
       "2022-12-28 00:00:00 -0.004552 -0.010187 -0.016713 -0.017974 -0.010169  \n",
       "2022-12-29 00:00:00  0.005245  0.014499  0.042396  0.022876  0.029593  \n",
       "2022-12-30 00:00:00 -0.014802 -0.002585 -0.004358  0.001629 -0.010859  \n",
       "\n",
       "[5 rows x 503 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "log_return = np.log(close_price_data / close_price_data.shift(1))\n",
    "log_return.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d83faa7",
   "metadata": {},
   "source": [
    "#### Q3.3 Compute the annualized mean return, volatility, and Sharpe ratios for these companies in your dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e2662aac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Annual Return</th>\n",
       "      <th>Annual Vol</th>\n",
       "      <th>Sharpe Ratios</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>YUM</th>\n",
       "      <td>0.143102</td>\n",
       "      <td>0.287745</td>\n",
       "      <td>0.497320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZBH</th>\n",
       "      <td>0.073715</td>\n",
       "      <td>0.283828</td>\n",
       "      <td>0.259716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZBRA</th>\n",
       "      <td>0.101340</td>\n",
       "      <td>0.381976</td>\n",
       "      <td>0.265304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZION</th>\n",
       "      <td>0.011266</td>\n",
       "      <td>0.444639</td>\n",
       "      <td>0.025336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ZTS</th>\n",
       "      <td>0.163729</td>\n",
       "      <td>0.255319</td>\n",
       "      <td>0.641272</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Annual Return  Annual Vol  Sharpe Ratios\n",
       "YUM        0.143102    0.287745       0.497320\n",
       "ZBH        0.073715    0.283828       0.259716\n",
       "ZBRA       0.101340    0.381976       0.265304\n",
       "ZION       0.011266    0.444639       0.025336\n",
       "ZTS        0.163729    0.255319       0.641272"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics = pd.DataFrame()\n",
    "metrics[\"Annual Return\"] = log_return.mean() * 252\n",
    "metrics[\"Annual Vol\"] = log_return.std() * np.sqrt(252)\n",
    "metrics[\"Sharpe Ratios\"] = metrics[\"Annual Return\"] / metrics[\"Annual Vol\"]\n",
    "metrics.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42fe93e5",
   "metadata": {},
   "source": [
    "#### Q3.4 Would it make sense to choose portfolio weights based only on the Sharpe ratios of the stocks in your dataset? Explain the reasons for your answer."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df44cf37",
   "metadata": {},
   "source": [
    "It does not make sense to create a sharpe weighted portfolios because we do not take into account the correlation between assets."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
